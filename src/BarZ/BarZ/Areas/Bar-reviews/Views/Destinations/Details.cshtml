@model DestinationViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="container">
    <div class="halfScreenBox">
        <h1>@Html.DisplayFor(model => model.Name)</h1>
    </div>
    <div class="halfScreenBox">
        <a class="col-md-4 btn btn-info btnsViewRight" href="##" onClick="history.go(-1); return false;">Go back</a>
    </div>
</div>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Info:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
    <div>
        <h4><a asp-controller="Bars" asp-action="ShowBarsInDestination" asp-route-id="@Model.Id">Bars List:</a></h4>

        @if (this.Model.Bars.Any())
        {
            int i = 0;
            string[] barNames = new string[100];
            foreach (var bar in Model.Bars)
            {
                i++;
                barNames[i] = bar.Name;
            }
            var barNamesInRow = String.Join(", ", barNames.Where(s => !string.IsNullOrEmpty(s)));

            <ul>
                @barNamesInRow
            </ul>
        }
        else
        {
            <ul>No Information.</ul>
        }

    </div>
</div>

@if (this.User.IsInRole(RolesConstants.AdminRoleName))
{
    <div class="btnsViewRight marginBottom100">
        <a class="btn btn-info" asp-action="Update" asp-route-id="@Model.Id">Update</a> |
        <a class="btn btn-info" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
    </div>

}
