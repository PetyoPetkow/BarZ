@model IEnumerable<BarViewModel>

@{
    ViewData["Title"] = "ShowBarsByFeature";
}

@{
    string heading = "At the moment there are no bars with this feature.";

    if (@Model.FirstOrDefault() != null)
    {
        string feature = Model.FirstOrDefault().Features.Where(f => f.FeatureName != null).FirstOrDefault().FeatureName;
        heading = ($"Bars which offer {feature}");
    }
}

<div class="container">
    <div class="halfScreenBox">
        <h1>@heading</h1>
    </div>
    <div class="halfScreenBox">
        <a class="col-md-4 btn btn-info btnsViewRight" href="##" onClick="history.go(-1); return false;">Go back</a>
    </div>
</div>

<div class="container">
    @foreach (var item in Model)
    {
        <div class="barIndexModel">
            <h2>@Html.DisplayFor(modelItem => item.Name)</h2>
            <p class="font-weight-light">
                (@Html.DisplayFor(modelItem => item.Destination.Name))
            </p>

            <img class="rounded mx-auto d-block barPicture" src="@Url.Content(item.PictureAdress)" alt="BarPicture">

            <hr />

            Work time:
            @Html.DisplayFor(modelItem => item.BeginningOfTheWorkDay) -
            @Html.DisplayFor(modelItem => item.EndOfTheWorkDay)<br />

            <span class="description">@Html.DisplayFor(modelItem => item.Description)<br /></span>
            <a href="@Html.DisplayFor(modelItem => item.FacebookPageUrl)">Facebook page</a><br />
            <a class="btnsViewRight" asp-action="Details" asp-route-id="@item.Id">Details</a>
        </div>
    }
</div>
